<?xml version='1.0' encoding='UTF-8'?> 
<queries>
<q id="home_maps_filter">  
  SELECT country_code, coalesce( {field} , -1) 
  FROM afo_map_slider
</q>

<q id="fertilizers_tree">  
  SELECT fertilizer_category_code, fertilizer_code, fertilizer_category_label, fertilizer_label 
  FROM fertilizers_category 
    JOIN codes_fertilizers on (fertilizer = fertilizer_code) 
    JOIN codes_fertilizers_categories on (fertilizer_category = fertilizer_category_code) 
  ORDER BY fertilizer_label
</q>

<q id="fertilizers_bycountry">  
  SELECT fertilizer_label 
  FROM fertilizers_country 
  JOIN codes_fertilizers on (codes_fertilizers.fertilizer_code = fertilizers_country.fertilizer_code) 
  WHERE fertilizers_country.country_code = '{id}' 
  ORDER BY fertilizer_label
</q>
  
<q id="fertilizers_bycrop">  
  SELECT fertilizer_label 
  FROM fertilizers_crop 
  JOIN codes_fertilizers on (codes_fertilizers.fertilizer_code = fertilizers_crop.fertilizer_code) 
  WHERE fertilizers_crop.crop_code = '{id}' 
  ORDER BY fertilizer_label
</q>

<q id="regions">  
  SELECT country_code, country_label 
  FROM codes_countries 
  WHERE parent_code = '' 
  ORDER BY country_code 
</q>
  
<q id="countries">
  SELECT country_code, country_label 
  FROM codes_countries 
  WHERE parent_code <> '' 
  GROUP BY country_code, country_label 
  ORDER BY country_label
</q>

<q id="countries_withfertizers">  
  SELECT DISTINCT codes_countries.country_code, codes_countries.country_label 
  FROM fertilizers_country, codes_countries 
  WHERE codes_countries.country_code = fertilizers_country.country_code 
  ORDER BY codes_countries.country_label
</q>
  
<q id="crops_withfertizers">  
  SELECT DISTINCT codes_crops.crop_code, codes_crops.crop_label 
  FROM fertilizers_crop, codes_crops 
  WHERE codes_crops.crop_code = fertilizers_crop.crop_code 
  ORDER BY codes_crops.crop_label
</q>

<q id="countries_byregion">  
  SELECT country_code, country_label 
  FROM codes_countries 
  WHERE parent_code = '{id}' 
</q>
  
<q id="countries_geojson">  
  SELECT ST_AsGeoJSON(geom), adm0_code, areanamee 
  FROM spatial.gaul0_faostat_afo_4326 
  WHERE adm0_code IN ({ids}) 
</q>
  
<q id="countries_byfertilizers">  
  SELECT country_code, string_agg(fertilizer_label,'|') 
  FROM fertilizers_country 
  JOIN codes_fertilizers on (codes_fertilizers.fertilizer_code = fertilizers_country.fertilizer_code) 
  WHERE fertilizers_country.fertilizer_code in ( {ids} ) 
  GROUP BY country_code
</q>

<q id="data_sources">  
  SELECT * FROM codes_data_sources 
  WHERE data_source_code <> 'ifa' and data_source_code <> 'ifdc' 
</q>

<q id="products">  
  SELECT DISTINCT fertilizer_label, fertilizer_code 
  FROM codes_fertilizers 
  ORDER BY fertilizer_label
</q>
  
<q id="elements">  
  SELECT DISTINCT * 
  FROM codes_elements 
  WHERE element_code not in ('rexp','rimp') 
</q>

<q id="prices_national_countries">  
  SELECT c.country_code, c.country_label 
  FROM prices_national d, codes_countries c 
  WHERE c.country_code  = d.country_code 
  GROUP BY c.country_code, c.country_label 
  ORDER BY c.country_label
</q>
  
<q id="prices_national">  
  SELECT area, item, year, month, round(cast(value AS numeric), 2) AS value, unit, '' AS flag, fertilizer_code 
  FROM prices_national
</q>

<q id="prices_national_filter">  
  SELECT area, item, year, month, round(cast(value AS numeric), 2) AS value, unit, '' AS flag, fertilizer_code 
  FROM prices_national 
  WHERE fertilizer_code in ('{fertilizer_code}') 
    AND country_code in ('{country_code}') 
    AND month_number between {month_from_yyyymm} 
    AND {month_to_yyyymm}
</q>

<q id="prices_national_products">  
  SELECT c.fertilizer_code, c.fertilizer_label 
  FROM codes_fertilizers c, prices_local d 
  WHERE c.fertilizer_code = d.fertilizer 
  GROUP BY c.fertilizer_code, c.fertilizer_label 
  ORDER BY c.fertilizer_label ASC 
</q>

<q id="prices_detailed_local_geofilter">  
  SELECT market, town_location, string_agg(''||price, ',') AS price, string_agg(type, ',') AS type 
  FROM (
    SELECT market, town_location, round(cast(avg(unit_price_usd) AS numeric), 2) AS price, type 
    FROM prices_local 
    WHERE fertilizer = cast( {fertilizer_code} AS varchar) 
      AND month between {month_from_yyyymm} 
      AND {month_to_yyyymm} 
      AND country in ('{country_code}') 
      AND type in ('{market_type}') 
    GROUP BY market, town_location, type
    ) AS data 
  GROUP BY market, town_location
</q>

<q id="prices_detailed_local_grid">  
  SELECT DISTINCT country_label, market, price, type, month 
  FROM (
    SELECT market, country, round(cast(avg(unit_price_usd) AS numeric), 2) AS price, type, month 
    FROM prices_local 
    WHERE fertilizer = cast({fertilizer_code} AS varchar) 
      AND month between {month_from_yyyymm} 
      AND {month_to_yyyymm} 
      AND country in ('{country_code}') 
      AND type in ('{market_type}') 
    GROUP BY market, country, month, type) data 
  JOIN codes_countries on (country = country_code) 
  ORDER BY month, country_label, market asc
</q>

<q id="prices_detailed_products">  
  SELECT c.fertilizer_code, c.fertilizer_label 
  FROM codes_fertilizers c, prices_local d 
  WHERE  c.fertilizer_code = d.fertilizer 
  GROUP BY c.fertilizer_code, c.fertilizer_label 
  ORDER BY c.fertilizer_label ASC 
</q>

<q id="prices_detailed_countries">  
  SELECT country, country_label 
  FROM (
    SELECT distinct country 
    FROM prices_local
    ) AS countries 
  JOIN codes_countries on country = country_code 
  GROUP BY country, country_label 
  ORDER BY country_label 
</q>

<q id="prices_international">  
  SELECT nutrient, fob, string_agg(period,'|') AS period, string_agg(''||value,'|') AS value 
  FROM (
    SELECT * 
    FROM prices_international 
    WHERE period in (
      SELECT distinct period 
      FROM prices_international 
      ORDER BY period desc 
      limit 14) ORDER BY period, index
    ) origin 
  GROUP BY index, nutrient, fob 
  ORDER BY index
</q>

<q id="select_from_compare">  
  SELECT element_code, element_label, CASE WHEN year is null then '' else cast ( year AS character varying) end AS year, CASE WHEN value is null then '' else cast ( value AS character varying) end  AS value, CASE WHEN um is null then '' else cast ( um AS character varying) end  AS Unit, '' AS Flag 
  FROM (
    SELECT element, year, value, um 
    FROM compare 
    WHERE data_source = '{SOURCE}' 
      and fertilizer = '{PRODUCT}' 
      and country = '{COUNTRY}' 
      and n_p = '{KIND}'
    ) c 
  RIGHT JOIN codes_elements on element = element_code 
  WHERE element <> 'rimp' and element<>'rexp' 
  ORDER BY element ASC, year ASC
</q>
  
<q id="select_from_compare_cstat">  
  SELECT element_code, element_label, CASE WHEN year is null then '' else cast ( year AS character varying) end AS year, CASE WHEN value is null then '' else cast ( value AS character varying) end  AS value, CASE WHEN um is null then '' else cast ( um AS character varying) end  AS Unit, '' AS Flag 
  FROM (
    SELECT element, year, value, um 
    FROM country_stat 
    WHERE fertilizer = '{PRODUCT}' 
      and country = '{COUNTRY}' 
      and n_p = '{KIND}'
    ) c right 
  JOIN codes_elements on element = element_code 
  WHERE element <> 'rimp' 
    and element <> 'rexp' 
  ORDER BY element ASC, year ASC
</q>
  
<q id="select_from_compare_ifa">  
  SELECT element_code, element_label, CASE WHEN year is null then '' else cast ( year AS character varying) end AS year,CASE WHEN nutrient is null then '' else cast ( nutrient AS character varying) end  AS nutrient,CASE WHEN value is null then '' else cast ( value AS character varying) end  AS Value,  CASE WHEN um is null then '' else cast ( um AS character varying) end  AS Unit, '' AS Flag  
  FROM (
    SELECT element, year, nutrient, value, um 
    FROM ifa_data 
    WHERE data_source = 'ifa' 
      and fertilizer = '{PRODUCT}' 
      and country = '{COUNTRY}' 
      and n_p = '{KIND}'
    ) c 
  RIGHT JOIN codes_elements on element = element_code 
  WHERE element <> 'rimp' 
    and element <> 'rexp' 
  ORDER BY element ASC, year ASC
</q>

<q id="select_from_compare_chart">  
  SELECT element_code, element_label, year, value, um 
  FROM (
    SELECT element, year, value, um 
    FROM compare 
    WHERE data_source = '{SOURCE}' 
      and fertilizer = '{PRODUCT}' 
      and country = '{COUNTRY}' 
      and n_p = '{KIND}'
    ) c 
  JOIN codes_elements on element = element_code and element in ('appcons', 'imp', 'exp') 
  WHERE value is not null 
  ORDER BY element ASC, year ASC
</q>
  
<q id="select_from_compare_chart_cstat">  
  SELECT element_code, element_label, year, value, um 
  FROM (
    SELECT element, year, value, um 
    FROM country_stat 
    WHERE fertilizer = '{PRODUCT}' 
      and country = '{COUNTRY}' 
      and n_p = '{KIND}'
    ) c 
  JOIN codes_elements on element = element_code 
  WHERE value is not null 
  ORDER BY element ASC, year ASC
</q>
  
<q id="select_dynamic_compare">  
  SELECT element_code, element_label, year, coalesce(value, -1), um 
  FROM (
    SELECT element, year, value, um 
    FROM compare 
    WHERE {WHERE}
  ) c 
  RIGHT JOIN codes_elements on element = element_code 
  ORDER BY element ASC, year ASC
</q>
  
<q id="product_by_source">  
  SELECT c.fertilizer_code, c.fertilizer_label 
  FROM codes_fertilizers c, compare d 
  WHERE d.data_source in ('{SOURCE}') 
    and c.fertilizer_code = d.fertilizer 
  GROUP BY c.fertilizer_code, c.fertilizer_label 
  ORDER BY c.fertilizer_label ASC
</q>
  
<q id="products_by_cstat">  
  SELECT c.cstat_fertilizer_code, c.cstat_fertilizer_label 
  FROM codes_fertilizers_cstat c, country_stat d 
  WHERE c.cstat_fertilizer_code = d.fertilizer 
  GROUP BY c.cstat_fertilizer_code, c.cstat_fertilizer_label 
  ORDER BY c.cstat_fertilizer_label ASC
</q>

<q id="compare_countries">  
  SELECT c.country_code, c.country_label 
  FROM prices_national d, codes_countries c 
  WHERE c.country_code = d.country_code 
  GROUP BY c.country_code, c.country_label 
  ORDER BY c.country_label
</q>
  
<q id="compare_by_country">  
  SELECT cc.country_label, d.year, d.value, d.um 
  FROM compare d, countries_unique cc 
  WHERE d.data_source in ('{SOURCE}') 
    and d.country in ({COUNTRY}) 
    and d.country = cc.country_code 
    and d.element IN ({ELEMENT}) 
    and d.fertilizer IN ({PRODUCT}) 
    and n_p IN ('{KIND}') 
    and d.value IS NOT NULL 
  ORDER BY cc.country_label ASC, d.year ASC
</q>
  
<q id="compare_by_element">  
  SELECT cc.element_label, d.year, d.value, d.um 
  FROM compare d, codes_elements cc 
  WHERE d.data_source IN ('{SOURCE}') 
    and d.country IN ({COUNTRY}) 
    and d.element IN ({ELEMENT}) 
    and d.element = cc.element_code 
    and d.fertilizer IN ({PRODUCT}) 
    and n_p IN ('{KIND}') 
    and d.value IS NOT NULL 
  ORDER BY cc.element_label ASC, d.year ASC
</q>
  
<q id="compare_by_product">  
  SELECT cc.fertilizer_label, d.year, d.value, d.um 
  FROM compare d, codes_fertilizers cc 
  WHERE d.data_source in ('{SOURCE}') 
    and d.country IN ({COUNTRY}) 
    and d.element IN ({ELEMENT}) 
    and d.fertilizer IN ({PRODUCT}) 
    and d.fertilizer = cc.fertilizer_code 
    and n_p IN ('{KIND}') 
    and d.value IS NOT NULL 
  ORDER BY cc.fertilizer_label ASC, d.year ASC
</q>

<q id="compare_pivot">  
  SELECT cs.data_source_label,cc.country_label,ce.element_label, cf.fertilizer_label, d.year, d.value, d.um 
  FROM compare d 
  inner JOIN countries_unique cc on d.country=cc.country_code 
  inner JOIN codes_fertilizers cf on d.fertilizer = cf.fertilizer_code 
  inner JOIN codes_elements ce on d.element = ce.element_code 
  inner JOIN codes_data_sources cs on d.data_source = cs.data_source_code 
  WHERE d.data_source IN ({SOURCE}) 
    AND d.country IN ({COUNTRY}) 
    AND d.element IN ({ELEMENT}) 
    AND d.fertilizer IN ({PRODUCT}) 
    AND n_p IN ({KIND}) 
    AND d.value IS NOT NULL
</q>

    
<q id="compare_by_source">  
  SELECT cc.data_source_label, d.year, d.value, d.um 
  FROM compare d, codes_data_sources cc 
  WHERE d.data_source IN ('{SOURCE}') 
    AND d.country IN ({COUNTRY}) 
    AND d.element IN ({ELEMENT}) 
    AND d.fertilizer IN ({PRODUCT}) 
    AND d.data_source = cc.data_source_code 
    AND n_p IN ('{KIND}') 
    AND d.value IS NOT NULL 
  ORDER BY cc.data_source_label ASC, d.year ASC
</q>

<q id="compare_by_country_cstat">  
  SELECT cc.country_label, d.year, d.value, d.um 
  FROM country_stat d, countries_unique cc 
  WHERE d.country IN ({COUNTRY}) 
    AND d.country = cc.country_code 
    AND d.element IN ({ELEMENT}) 
    AND d.fertilizer IN ({PRODUCT}) 
    AND n_p IN ('{KIND}') 
    AND d.value IS NOT NULL 
  ORDER BY cc.country_label ASC, d.year ASC
</q>
  
<q id="compare_by_element_cstat">  
  SELECT cc.element_label, d.year, d.value, d.um 
  FROM country_stat d, codes_elements cc 
  WHERE d.country IN ({COUNTRY}) 
    AND d.element IN ({ELEMENT}) 
    AND d.element = cc.element_code 
    AND d.fertilizer IN ({PRODUCT}) 
    AND n_p IN ('{KIND}') 
    AND d.value IS NOT NULL 
  ORDER BY cc.element_label ASC, d.year ASC
</q>
  
<q id="compare_by_product_cstat">  
  SELECT cc.cstat_fertilizer_label, d.year, d.value, d.um 
  FROM country_stat d, codes_fertilizers_cstat cc 
  WHERE d.country IN ({COUNTRY}) 
    AND d.element IN ({ELEMENT}) 
    AND d.fertilizer IN ({PRODUCT}) 
    AND d.fertilizer = cc.cstat_fertilizer_code 
    AND n_p IN ('{KIND}') 
    AND d.value IS NOT NULL 
  ORDER BY cc.cstat_fertilizer_label ASC, d.year ASC
</q>

<q id="directory_business_country">  
  SELECT distinct country_code, country_name 
  FROM directories_business ORDER BY country_name ASC
</q>
  
<q id="directory_business_result">  
  SELECT full_company_name, company_city, concat(services_0, ' ', services_1, ' ', services_2, ' ', services_3, ' ', services_4, ' ', services_5, ' ', services_6, ' ', services_7, ' ', services_8, ' ', services_9, ' ', services_10, ' ', services_11, ' ', services_12, ' ', services_13, ' ', services_14),  concat(sector_0, ' ', sector_1, ' ', sector_2, sector_3)  
  FROM directories_business 
  WHERE country_code IN ({COUNTRY}) 
    AND ( sector_0 IN ({SECTOR}) OR sector_1 IN ({SECTOR}) OR sector_2 IN ({SECTOR}) OR sector_3 IN ({SECTOR})) 
    AND ( services_0 IN ({SERVICE}) OR services_1 IN ({SERVICE}) OR services_2 IN ({SERVICE}) OR services_3 IN ({SERVICE}) OR services_4 IN ({SERVICE}) OR services_5 IN ({SERVICE}) OR services_6 IN ({SERVICE}) OR services_7 IN ({SERVICE}) OR services_8 IN ({SERVICE}) OR services_9 IN ({SERVICE}) OR services_10 IN ({SERVICE}) OR services_11 IN ({SERVICE}) OR services_12 IN ({SERVICE}) OR services_13 IN ({SERVICE}) OR services_14 IN ({SERVICE}) )
</q>
  
<q id="directory_business_only_product_all">  
  SELECT full_company_name, company_city, concat(services_0, ' ', services_1, ' ', services_2, ' ', services_3, ' ', services_4, ' ', services_5, ' ', services_6, ' ', services_7, ' ', services_8, ' ', services_9, ' ', services_10, ' ', services_11, ' ', services_12, ' ', services_13, ' ', services_14), concat(sector_0, ' ', sector_1, ' ', sector_2, sector_3) 
  FROM directories_business 
  WHERE country_code IN ({COUNTRY}) 
    AND ( services_0 IN ({SERVICE}) OR services_1 IN ({SERVICE}) OR services_2 IN ({SERVICE}) OR services_3 IN ({SERVICE}) OR services_4 IN ({SERVICE}) OR services_5 IN ({SERVICE}) OR services_6 IN ({SERVICE}) OR services_7 IN ({SERVICE}) OR services_8 IN ({SERVICE}) OR services_9 IN ({SERVICE}) OR services_10 IN ({SERVICE}) OR services_11 IN ({SERVICE}) OR services_12 IN ({SERVICE}) OR services_13 IN ({SERVICE}) OR services_14 IN ({SERVICE}))
</q>
  
<q id="directory_business_only_sector_all">  
  SELECT full_company_name, company_city, concat(services_0, ' ', services_1, ' ', services_2, ' ', services_3, ' ', services_4, ' ', services_5, ' ', services_6, ' ', services_7, ' ', services_8, ' ', services_9, ' ', services_10, ' ', services_11, ' ', services_12, ' ', services_13, ' ', services_14), concat(sector_0, ' ', sector_1, ' ', sector_2, sector_3) 
  FROM directories_business 
  WHERE country_code IN ({COUNTRY}) 
    AND (sector_0 IN ({SECTOR}) OR sector_1 IN ({SECTOR}) OR sector_2 IN ({SECTOR}) OR sector_3 IN ({SECTOR}))
</q>
  
<q id="directory_business_only_country_all">  
  SELECT full_company_name, company_city, concat(services_0, ' ', services_1, ' ', services_2, ' ', services_3, ' ', services_4, ' ', services_5, ' ', services_6, ' ', services_7, ' ', services_8, ' ', services_9, ' ', services_10, ' ', services_11, ' ', services_12, ' ', services_13, ' ', services_14), concat(sector_0, ' ', sector_1, ' ', sector_2, sector_3) 
  FROM directories_business 
  WHERE country_code IN ({COUNTRY})
</q>

<q id="pubs_reformat">  
  SELECT CONCAT('',publications.category), CONCAT('',publications.title),  CONCAT('',publications.description),  CONCAT('',publications.publication_date),  CONCAT('',publications.posting_date),  CONCAT('',publications.source),  CONCAT('',publications.author_name),   CONCAT('',publications.sector),  CONCAT('',publications.language),   CONCAT('',publications.region_code),   CONCAT('',publications.countries_code),   CONCAT('',publications.document_type),  CONCAT('',publications.document_size),  CONCAT('',publications.document_attachment_name),   CONCAT('',publications.document_attachment_title),   CONCAT('',publications.document_tags), CONCAT('',publications.publication_rating) 
  FROM public.publications
</q>
  
<q id="events_reformat">  
  SELECT events_view.id_events, events_view.category, events_view.date_start,events_view.date_end,events_view.description,events_view.title,events_view.long_description,events_view.nbdocs,events_view.ea_type,events_view.ea_file_name,   events_view.ea_attachment_title,   events_view.ea_attachment_size,  events_view.ea_attachment_description, events_view.venue, events_view.country 
  FROM public.events_view
</q>
  
<q id="events_reformat_long">  
  SELECT id_events, category, date_start, date_end, description, title 
  FROM events
</q>

</queries>